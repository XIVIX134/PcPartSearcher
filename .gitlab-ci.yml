image: node:18-alpine

stages:
  - test
  - build
  - deploy

variables:
  DEPLOY_DIR: /var/www/pcpartsearcher
  API_DEPLOY_DIR: /var/www/pcpartsearcher-api

# Frontend jobs
frontend-test:
  stage: test
  image: node:18-alpine
  cache:
    key: client-cache
    paths:
      - client/node_modules
  script:
    - cd client
    - npm ci
    - npm run lint
    - npm run tsc

frontend-build:
  stage: build
  image: node:18-alpine
  cache:
    key: client-cache
    paths:
      - client/node_modules
  script:
    - cd client
    - npm ci
    - npm run build
  artifacts:
    paths:
      - client/dist/

# Backend jobs
backend-test:
  stage: test
  image: python:3.12-slim
  cache:
    key: server-cache
    paths:
      - .pip-cache/
  variables:
    PIP_CACHE_DIR: .pip-cache/
  script:
    - cd server
    - pip install -r requirements.txt
    - python -m pytest tests/ || echo "No tests found"

backend-build:
  stage: build
  image: python:3.12-slim
  cache:
    key: server-cache
    paths:
      - .pip-cache/
  variables:
    PIP_CACHE_DIR: .pip-cache/
  script:
    - cd server
    - pip install -r requirements.txt
  artifacts:
    paths:
      - server/

# Frontend deployment with firewall configuration
deploy-frontend:
  stage: deploy
  image: alpine:latest
  needs:
    - frontend-build
  script:
    - apk add --no-cache openssh-client sshpass
    - sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no root@$SERVER_IP "mkdir -p $DEPLOY_DIR"
    - sshpass -p "$SSH_PASSWORD" scp -r -o StrictHostKeyChecking=no client/dist/* root@$SERVER_IP:$DEPLOY_DIR
    - sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no root@$SERVER_IP "mkdir -p /etc/nginx/conf.d"
    - sshpass -p "$SSH_PASSWORD" scp -r -o StrictHostKeyChecking=no server/pcpartsearcher.conf root@$SERVER_IP:/etc/nginx/conf.d/
    - sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no root@$SERVER_IP "command -v nginx >/dev/null 2>&1 || yum install -y nginx"
    - sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no root@$SERVER_IP "firewall-cmd --permanent --add-port=6565/tcp || true"
    - sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no root@$SERVER_IP "firewall-cmd --reload || true"
    - sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no root@$SERVER_IP "setenforce 0 || true"  # Temporarily disable SELinux
    - sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no root@$SERVER_IP "systemctl restart nginx"
    - sleep 5
    - sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no root@$SERVER_IP "curl -f http://localhost:6565 || exit 1"  # Updated port
  only:
    - main

# Backend deployment with correct file structure
deploy-backend:
  stage: deploy
  image: alpine:latest
  needs:
    - backend-build
  script:
    - apk add --no-cache openssh-client sshpass
    - sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no root@$SERVER_IP "mkdir -p $API_DEPLOY_DIR"
    - sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no root@$SERVER_IP "rm -rf $API_DEPLOY_DIR/*"  # Clean old files
    - sshpass -p "$SSH_PASSWORD" scp -r -o StrictHostKeyChecking=no server/* root@$SERVER_IP:$API_DEPLOY_DIR/
    - sshpass -p "$SSH_PASSWORD" scp -r -o StrictHostKeyChecking=no scrapers root@$SERVER_IP:$API_DEPLOY_DIR/
    - sshpass -p "$SSH_PASSWORD" scp -r -o StrictHostKeyChecking=no setup.py root@$SERVER_IP:$API_DEPLOY_DIR/
    - sshpass -p "$SSH_PASSWORD" scp -r -o StrictHostKeyChecking=no server/pcpartsearcher-api.service root@$SERVER_IP:/etc/systemd/system/
    - sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no root@$SERVER_IP "cd $API_DEPLOY_DIR && ls -la"  # Debug directory contents
    - sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no root@$SERVER_IP "command -v python3 >/dev/null 2>&1 || yum install -y python3"
    - sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no root@$SERVER_IP "command -v pip3 >/dev/null 2>&1 || python3 -m ensurepip"
    - sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no root@$SERVER_IP "yum install -y gcc python3-devel"
    - sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no root@$SERVER_IP "cd $API_DEPLOY_DIR && pip3 install -r requirements.txt"
    - sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no root@$SERVER_IP "cd $API_DEPLOY_DIR && PYTHONPATH=$API_DEPLOY_DIR pip3 install -e ."
    - sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no root@$SERVER_IP "firewall-cmd --permanent --add-port=3500/tcp || true"
    - sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no root@$SERVER_IP "firewall-cmd --reload || true"
    - sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no root@$SERVER_IP "systemctl daemon-reload"
    - sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no root@$SERVER_IP "systemctl enable pcpartsearcher-api"
    - sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no root@$SERVER_IP "setenforce 0 || true"
    - sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no root@$SERVER_IP "systemctl restart pcpartsearcher-api"
    - sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no root@$SERVER_IP "systemctl status pcpartsearcher-api || true"
    - sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no root@$SERVER_IP "journalctl -u pcpartsearcher-api -n 50 || true"
    - sleep 5
    - sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no root@$SERVER_IP "curl -f http://localhost:3500/health || exit 1"
  only:
    - main